



const mongoose = require('mongoose')   
const validator = require('validator') 

mongoose.connect('mongodb://localhost:27017/task-manager-api', {useNewUrlParser: true, useUnifiedTopology: true});




const User = mongoose.model('User', {
    name: {
        type: String,
        required: true,
        trim: true
    },
    email: {
        type: String,
        required: true,
        trim: true,
        lowercase: true,
        validate(value) {
            if(!validator.isEmail(value)){
                throw new Error('not a valid email')
            }
        }
                           
    },
    password:{
        type: String, 
        required: true,
        minlength: 7,
        trim: true,
        validate(value){
            if(value.toLowerCase().includes('password')){
               throw new Error('Password does not meet password standards') 
            }
        }  
              
    },
    age:{
        type: Number, 
        default: 0,
        validate(value) {
            if(value<0){
                throw new Error('Age must be a positive #')
            }
        }    
    }
})


//////////////////////////////////  Setting up a basic user and update DB /////////////////////////////
// const me = new User({
//     name: '    Kris   ',
//     age: 15,
//     email: 'Kris@gmail.COM      ',
//     password: ' pho9neadfe  '
// })

// me.save().then(() => {
//     console.log(me)
// }).catch((error) => {
//     console.log('Error -> MONGOOSE.JS', error)
// })

// me.save().then(() => {
//     console.log(me)
// }).catch((error)=>{
//     console.log('Error!', error)
// })
//////////////////////////////////////////////////////////////////////////////////////////////////////



const Task = mongoose.model('Task', {
    description: {
        type: String,
        required: true,
        trim: true
    },
    completed: {
        type: Boolean,
        default: false
    }
})

const task = new Task({
    description: '    Eat Lunch    ',
    // completed: false
})


task.save().then(() => {
    console.log(task)
}).catch((error) =>{
    console.log('Error', error)
})

//task.save().then(() => console.log(task));